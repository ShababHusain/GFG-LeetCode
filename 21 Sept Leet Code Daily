import java.util.*;

class MovieRentingSystem {
    private static class MovieEntry implements Comparable<MovieEntry> {
        int shop, movie, price;

        MovieEntry(int shop, int movie, int price) {
            this.shop = shop;
            this.movie = movie;
            this.price = price;
        }

        public int compareTo(MovieEntry other) {
            if (this.price != other.price) return this.price - other.price;
            if (this.shop != other.shop) return this.shop - other.shop;
            return this.movie - other.movie;
        }

        public List<Integer> toList() {
            return Arrays.asList(shop, movie);
        }
    }

    private Map<Integer, TreeSet<MovieEntry>> available;
    private TreeSet<MovieEntry> rented;
    private Map<String, Integer> priceMap;

    public MovieRentingSystem(int n, int[][] entries) {
        available = new HashMap<>();
        rented = new TreeSet<>();
        priceMap = new HashMap<>();

        for (int[] entry : entries) {
            int shop = entry[0], movie = entry[1], price = entry[2];
            MovieEntry me = new MovieEntry(shop, movie, price);
            available.computeIfAbsent(movie, k -> new TreeSet<>()).add(me);
            priceMap.put(shop + "#" + movie, price);
        }
    }

    public List<Integer> search(int movie) {
        List<Integer> result = new ArrayList<>();
        if (!available.containsKey(movie)) return result;

        Iterator<MovieEntry> it = available.get(movie).iterator();
        for (int i = 0; i < 5 && it.hasNext(); i++) {
            result.add(it.next().shop);
        }
        return result;
    }

    public void rent(int shop, int movie) {
        int price = priceMap.get(shop + "#" + movie);
        MovieEntry me = new MovieEntry(shop, movie, price);
        available.get(movie).remove(me);
        rented.add(me);
    }

    public void drop(int shop, int movie) {
        int price = priceMap.get(shop + "#" + movie);
        MovieEntry me = new MovieEntry(shop, movie, price);
        rented.remove(me);
        available.get(movie).add(me);
    }

    public List<List<Integer>> report() {
        List<List<Integer>> result = new ArrayList<>();
        Iterator<MovieEntry> it = rented.iterator();
        for (int i = 0; i < 5 && it.hasNext(); i++) {
            result.add(it.next().toList());
        }
        return result;
    }
}

/**
 * Your MovieRentingSystem object will be instantiated and called as such:
 * MovieRentingSystem obj = new MovieRentingSystem(n, entries);
 * List<Integer> param_1 = obj.search(movie);
 * obj.rent(shop,movie);
 * obj.drop(shop,movie);
 * List<List<Integer>> param_4 = obj.report();
 */
