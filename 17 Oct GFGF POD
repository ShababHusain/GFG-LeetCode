/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
} */

class Solution {
    int sum = 0;

    public void transformTree(Node root) {
        reverseInOrder(root);
    }

    private void reverseInOrder(Node node) {
        if (node == null) return;

        // Traverse right subtree first (greater values)
        reverseInOrder(node.right);

        // Update node value with current sum
        int original = node.data;
        node.data = sum;
        sum += original;

        // Traverse left subtree
        reverseInOrder(node.left);
    }
}
