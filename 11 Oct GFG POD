/*
class Node{
    int data;
    Node left, right;
    Node(int d){
        data=d;
        left=right=null;
    }
}
*/

class Solution {
    int maxSum = Integer.MIN_VALUE;

    public int findMaxSum(Node root) {
        dfs(root);
        return maxSum;
    }

    private int dfs(Node node) {
        if (node == null) return 0;

        int left = Math.max(0, dfs(node.left));  // ignore negative paths
        int right = Math.max(0, dfs(node.right));

        int currentPathSum = node.data + left + right;
        maxSum = Math.max(maxSum, currentPathSum);

        return node.data + Math.max(left, right);  // return max single path
    }
}
