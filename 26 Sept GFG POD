class Solution {
    public int kBitFlips(int[] arr, int k) {
        int n = arr.length;
        int flips = 0;
        int flipCount = 0;
        int[] isFlipped = new int[n];

        for (int i = 0; i < n; i++) {
            if (i >= k) {
                flipCount ^= isFlipped[i - k]; // remove effect of flip that ends here
            }

            if ((arr[i] ^ flipCount) == 0) { // current bit is 0 after flips
                if (i + k > n) return -1; // can't flip beyond array
                flips++;
                flipCount ^= 1;
                isFlipped[i] = 1;
            }
        }

        return flips;
    }
}
