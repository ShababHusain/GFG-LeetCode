class Solution {
    public static String smallestWindow(String s, String p) {
        // code here
        if(s.length()<p.length()) return "";
        
        int[] targetFreq=new int[128];
        for(char c:p.toCharArray()) targetFreq[c]++;
        
        int left=0, right=0, minLen=Integer.MAX_VALUE, start=0;
        int[] windowFreq=new int[128];
        int required=p.length(), formed=0;
        
        while(right<s.length()){
            char rChar=s.charAt(right);
            windowFreq[rChar]++;
            if(targetFreq[rChar]>0&&windowFreq[rChar]<=targetFreq[rChar]){
                formed++;
            }
            while(formed==required){
                if(right-left+1<minLen){
                    minLen=right-left+1;
                    start=left;
                }
                char lChar=s.charAt(left);
                windowFreq[lChar]--;
                if(targetFreq[lChar]>0&&windowFreq[lChar]<targetFreq[lChar]){
                    formed--;
                }
                left++;
            }
            right++;
        }
        return minLen==Integer.MAX_VALUE ?"":s.substring(start, start+minLen);
    }
}
